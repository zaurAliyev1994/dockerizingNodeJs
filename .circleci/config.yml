version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:7.10
    steps:
     - checkout
     - run: npm install
     - setup_remote_docker:
        docker_layer_caching: true
     - run:
               name: Python version
               command: |
                 sudo apt-get update && sudo apt-get install -y python-pip libpython-dev
                 python -V
     - run:
          name: Install dependencies
          command: |
            sudo pip install awscli
            aws --version
     - run:
          name: Build application Docker image
          command: |
            docker build -t app .
     - deploy:
          name: Push application Docker image
          command: |
            CLUSTER='docker-cluster'
            DOCKER_IMAGE='docker-repo'
            TASK='docker-container-latest'
            SERVICE='docker-service'
            TAG='latest'
            FAMILY='task-docker-latest'
            aws configure set region $AWS_REGION
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            $(aws ecr get-login --no-include-email --region $AWS_REGION)
            docker tag app $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE

            task_template='[
              {
                "name": "%s",
                "image": "%s.dkr.ecr.us-east-1.amazonaws.com/%s:%s",
                "essential": true,
                "memory": 128,
                "portMappings": [
                  {
                    "containerPort": 8080,
                    "hostPort": 80
                  }
                ]
              }
            ]'
            echo "$task_template"
            task_def=$(printf "$task_template" $TASK $AWS_ACCOUNT_ID $DOCKER_IMAGE $TAG)
            json=$(aws ecs register-task-definition --container-definitions "$task_def" --family "$FAMILY")
            revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')
            aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE" --task-definition "task-docker-latest"